swagger: "2.0"
info:
  version: "0.0.1"
  title: Pam English
# during dev, should point to your local machine
host: localhost:3005
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
  - application/x-www-form-urlencoded
  - application/octet-stream
# format of the responses to the client (Accepts)
produces:
  - "application/json"
  - "application/xml"
  - "application/x-www-form-urlencoded"
paths:
  /level:
    x-swagger-router-controller: levels
    get:
      summary: "Get level list"
      description: "현재 등록된 모든 레벨을 보여줌"
      operationId: getLevelList
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LevelsGetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /teachers:
    x-swagger-router-controller: teachers
    post:
      summary: "Add a new teacher(dev.need validation check)"
      description: "Create teacher"
      operationId: "createTeacher"
      parameters:
        - name: "email"
          in: "formData"
          description: "선생님이 가입한 아이디의 이메일 주소"
          required: true
          type: "string"
        - name: "levelId"
          in: "formData"
          description: "선생님 레벨의 키값(LEVEL_TB참조)"
          required: false
          type: "integer"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/TeacherPostResponse"
        405:
          description: "Invalid Input"
        409:
          description: "Duplicated Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        555:
          description: "DB Insert Error"
        default:
          description: "Error"
  /users:
    x-swagger-router-controller: users
    post:
      summary: "Add a new user(dev.need validation check)"
      description: Create user
      operationId: createUser
      parameters: [
        {
          name: name,
          in: formData,
          description: '이름',
          required: true,
          type: string
        }, {
          name: password,
          in: formData,
          description: '비밀번호',
          required: false,
          type: string
        }, {
          name: email,
          in: formData,
          description: '이메일',
          required: true,
          type: string
        }, {
          name: mobile,
          in: formData,
          description: '핸드폰번호(숫자만입력)',
          required: false,
          type: string
        }, {
          name: nick,
          in: formData,
          description: '별명',
          required: false,
          type: string
        }, {
          name: levelId,
          in: formData,
          description: 'LEVEL의 ID값',
          required: true,
          type: string
        }, {
          name: snsProvider,
          in: formData,
          description: 'sns provider(kakaotalk, naver, facebook, etc.)',
          required: false,
          type: string
        }, {
          name: snsId,
          in: formData,
          description: 'sns id',
          required: false,
          type: string
        }
      ]
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UsersResponse"
        "409":
          description: Conflict
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /classes:
    x-swagger-router-controller: classes
    get:
      summary: "Get class list"
      description: 클래스 리스트(생성일 역순)
      operationId: getClasses
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ClassesGetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      summary: "Add a new class"
      description: 수업 클래스 생성
      operationId: postClass
      parameters: [
        {
          name: 'name',
          in: 'formData',
          description: '클래스 이름(중복 안됨)',
          required: true,
          type: 'string',
        }, {
          name: 'capacity',
          in: 'formData',
          description: '수업 참여 가능 정원',
          required: true,
          type: 'string',
        }, {
          name: 'levelId',
          in: 'formData',
          description: '수업 레벨(레벨TB 그룹 CLASS의 레벨 id값)',
          required: true,
          type: 'string',
        }, {
          name: 'location',
          in: 'formData',
          description: '수업 장소',
          required: true,
          type: 'string',
        }, {
          name: 'timetable',
          in: 'formData',
          description: '수업 시간표',
          required: true,
          type: 'string',
        }, {
          name: 'teacherId',
          in: 'formData',
          description: '선생님TB의 id값',
          required: true,
          type: 'string',
        }
      ]
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ClassesPostResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  LevelsGetResponse:
    type: object
    properties:
      groupName:
        type: array
        items:
          type: object
          properties:
            code:
              type: integer
            group:
              type: string
            description:
              type: string
  TeacherPostResponse:
    type: object
    properties:
      success:
        type: boolean
  UsersResponse:
    type: object
    properties:
      success:
        type: boolean
      userId:
        type: integer
  ClassesGetResponse:
    type: object
    properties:
      count:
        type: integer
      classList:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            capacity:
              type: integer
            levelId:
              type: integer
            location:
              type: string
            timetable:
              type: object
            teacher:
              type: string
  ClassesPostResponse:
    type: object
    properties:
      success:
        type: boolean
      classId:
        type: integer
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
